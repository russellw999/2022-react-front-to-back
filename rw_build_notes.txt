
=== feedback-app-main

1.   npx create-react-app   feedback-app-main  --use-npm

        --use-npm means use npm insead of yarn
        
          npm start :       starts the development server
          
          npm run build :   bundles the app into static files for production
          
          npm run test:     starts the test runner
          
          npm run eject:    removes this tool and copies build dependencies, 
                            config files and app dependecies into the app directory:
                            If you do this you cant go back
                            
                            
ch02 React Basics and JSX ( Javascript XML) video

    React 18  Though it works the  ReactDOM.render is no longer supported
                           use createRoot instead
                           Until you switch your app will behave as if it is running React 17
                           
      In  index.js
      
          const root = ReactDOM.createRoot(document.getElementById('root'));
          root.render(<App />);
          
          
          This also means the import for ReactDOM must change
          
          
          import ReactDOM from 'react-dom/client';     instead of   import ReactDOM from 'react-dom' 
                           
                           
     For React18 the index.js  file will be
     
  import React from 'react';
  import ReactDOM from 'react-dom/client';
  import App from './App';

  //  Old Pre React 18 syntax
  // ReactDOM.render(<h1>My App</h1>, document.getElementById('root'));
  // ReactDOM.render(<App />, document.getElementById('root'));

  const root = ReactDOM.createRoot(document.getElementById('root'));
  root.render(<App />);
  
  BETTER STILL
  
  
  root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
   );
  
    # package to generate unique IDs
  ch04  npm i uuid    

  ch04 Fade Animation with Framer Motion

  npm i framer-motion@4.1.17


  == ch06 deploy to Netlify

      npm run build     // create optimised productuion build

      npm i -g server
         
          serve -s build     // serves what we have in our static build on localhost:5000



     To use Netlify to serve from GitHub
     Anotehr site is   versel

 == ch07   

 Install json server    npm - json-server

   In package.json   create script

     "server": "json-server --watch  db.json --port 5000"

  create db.json  in root folder

  Install concurrently and add script to package.json to start the app and server concurrently

     npm i concurrently

      "dev": "concurrently \"npm run server\" \"npm start\""

      now can use:

      npm run dev

   Add a Proxy  for http://localhost:5000

   in package.json add
   "proxy": "http://localhost:5000"


==== Github Tailwind Project

 Setup

 Installing Tailwind CSS with create-react-app

   www.tailwindcss.com

 npx create-react-app  github-find --use npm


       cd github-find
       
   Course notes specify  install of specific version of Taliwind and Craco    
          https://v2.tailwindcss.com/docs/guides/create-react-app

          npm install -D tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9
          npm install @craco/craco     -- install fails

   However instructions on Tailwind.css look more up to date

       https://tailwindcss.com/docs/configuration

       Install tailwindcss and its peer dependencies via npm, and then run the init command to generate both tailwind.config.js and postcss.config.js.   

     2.          npm install -D tailwindcss postcss autoprefixer
                 npx tailwindcss init -p 

      3.         Configure your template paths 
                 Add the paths to all of your template files in your tailwind.config.js file

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}   

( configure Tailwind to remove unused styles in production) 
      purge: ''./src/**/*.{js,jsx,ts,tsx}','./public.index.html'],

   4.   Add the Tailwind directives to your CSS
 
      Add the @tailwind directives for each of Tailwindâ€™s layers to your ./src/index.css file.

       @tailwind base;
       @tailwind components;
       @tailwind utilities;

  5.  Start your build process

       npm run start


  6.    Start using Tailwind in your project
        npm start

  App.js
  export default function App() {
  return (
    <h1 className="text-3xl font-bold underline">
      Hello world!
    </h1>
  )
}



 7.  npm i daisyui

 8. tialwind.conf.js

       plugins: [require('daisyui')]

  npm i postcss-flexbugs-fixes
  npm i postcss-preset-env

9.   npm start


10.  npm i react-router-dom react-icons


== ch09 Working with Github autoprefixer

Personal Access Token
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







      








                           
                           
                                                    
                            
                            
        
        